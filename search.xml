<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title></title>
      <url>/2017/08/16/%E7%9B%B8%E5%85%B3%E5%AD%90%E6%9F%A5%E8%AF%A2%E5%92%8C%E9%9D%9E%E7%9B%B8%E5%85%B3%E5%AD%90%E6%9F%A5%E8%AF%A2/</url>
      <content type="html"><![CDATA[<h3 id="非相关子查询和相关子查询执行过程详解"><a href="#非相关子查询和相关子查询执行过程详解" class="headerlink" title="非相关子查询和相关子查询执行过程详解"></a><a href="http://blog.csdn.net/mascf/article/details/50288199" target="_blank" rel="external">非相关子查询和相关子查询执行过程详解</a></h3><p>前段时间有一个相关子查询的SQL语句，看不太懂他是如何执行的，为什么会出现那个结果。着实纠结了一把。下面来讲一下非相关子查询和相关子查询的执行过程是怎样的。</p>
<h4 id="非相关子查询"><a href="#非相关子查询" class="headerlink" title="非相关子查询"></a>非相关子查询</h4><hr>
<p>先看一个非相关子查询到sql语句。</p>
<p>需求：查询学生表student和学生成绩表grade中成绩为70分的学生的基本信息。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> t.sno,t.sname,t.sage,t.sgentle,t.sbirth,t.sdept <span class="keyword">from</span> student t <span class="keyword">where</span> t.sno <span class="keyword">in</span> (<span class="keyword">select</span> f.sno <span class="keyword">from</span> garde f <span class="keyword">where</span> f.score=<span class="number">70</span>)</div></pre></td></tr></table></figure>
<p>这个sql语句的执行时是简单的，</p>
<p>1、在grade表中找出成绩为70的学生学号sno,再将该学号返回到父查询作为where子句的条件。</p>
<p>2、在student表中找到该学号学生的其他基本信息。</p>
<h4 id="相关子查询"><a href="#相关子查询" class="headerlink" title="相关子查询"></a>相关子查询</h4><hr>
<p>所谓相关子查询，是指求解相关子查询不能像求解普通子查询那样，一次将子查询求解出来，然后求解父查询。相关子查询的内层查询由于与外层查询有关，因此必须反复求值。</p>
<p>下面看相关子查询的sql语句。</p>
<p>需求：在学生表student和学生成绩表grade找出参加了“计算机基础”课程并且分数在80分以上的所有学生信息。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> t.sno,t.sname,t.sage,t.sgentle,t.sbirth,sdept <span class="keyword">from</span> student t <span class="keyword">where</span> <span class="number">80</span>&lt;=(<span class="keyword">select</span> f.score <span class="keyword">from</span> grade f <span class="keyword">where</span> f.sno=t.sno <span class="keyword">and</span> f.cname=<span class="string">'计算机基础'</span>)</div></pre></td></tr></table></figure>
<p>该子查询的执行流程：</p>
<p>1、 先从父查询的student表中取出第一条记录的sno值，进入子查询中，比较其where子句的条件“where f.sno=t.sno and f.cname=’计算机基础’”，符合则返回score成绩。</p>
<p>2、 返回父查询，判断父查询的where子句条件80&lt;=返回的score,如果条件为true，则返回第1条记录。</p>
<p>3、 从父查询的student表中取出第2条数据，重复上述操作，直到所有父查询中的表中记录取完为止。</p>
<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><hr>
<p>对比这两个查询的sql执行过程可以看出，相关子查询和非相关子查询的不同点在于，相关子查询依赖于父查询，父查询和子查询是有联系的，尤其在子查询的where语句中更是如此。明白了他们的执行过程，再去看相关子查询的代码，一下子就明白了。</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title></title>
      <url>/2017/08/16/sql%20%E6%89%BE%E5%87%BA%E7%9B%B8%E5%90%8C%E8%AE%B0%E5%BD%95%E9%87%8C%E6%9C%80%E8%BF%91%E6%97%B6%E9%97%B4%E7%9A%84%E4%B8%80%E6%9D%A1/</url>
      <content type="html"><![CDATA[<h3 id="sql-找出相同记录里最近时间的一条"><a href="#sql-找出相同记录里最近时间的一条" class="headerlink" title="sql 找出相同记录里最近时间的一条"></a>sql 找出相同记录里最近时间的一条</h3><p>样例表如下 </p>
<p>sub_dh date Gname </p>
<p>A1001 2015/4/25 B清单 </p>
<p>A1002 2015/6/27 C清单 </p>
<p>A1001 2015/8/23 C清单</p>
<p>A1003 2015/5/28 A清单 </p>
<p>第一条记录和第三条记录编号一样，要查询出最近时间的一条记录</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">test</span> A  <span class="keyword">where</span> <span class="built_in">date</span>=(<span class="keyword">select</span> <span class="keyword">max</span>(<span class="built_in">date</span>) <span class="keyword">from</span> <span class="keyword">test</span> B <span class="keyword">where</span> A.sub_dh=B.sub_dh)</div></pre></td></tr></table></figure>
<p>首先将表根据订单号自行自连接，然后查询出表里所有的记录其时间等于连接表里最近时间的。具体执行过程可参照 <strong>非相关子查询</strong> 里面的内容，这是一个非相关子查询。</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[fist demo]]></title>
      <url>/2017/08/15/fist-demo/</url>
      <content type="html"><![CDATA[<p>gasgsa<br>gasgdsa</p>
]]></content>
      
        <categories>
            
            <category> hexo </category>
            
        </categories>
        
        
        <tags>
            
            <tag> nodejs </tag>
            
            <tag> hexo </tag>
            
            <tag> NexT </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2017/08/14/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Markdown Demo]]></title>
      <url>/2016/08/24/2016-8-24-markdown_demo/</url>
      <content type="html"><![CDATA[<blockquote>
<p>一个用来测试当前站点的Markdown样式的Demo</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">Attentions (放在开头)：</div><div class="line"></div><div class="line">1,markdown的解析遇到一个空行作为一次解析，所以上下两个语法需要有一个空行做间隔。</div><div class="line">  比如：</div><div class="line">  # H1</div><div class="line">  ## H2</div><div class="line">  只能解析H1，##H2被解析为&lt;p&gt;</div><div class="line"></div><div class="line">  要正确被解析，应该在两个解析间插入空行</div><div class="line"></div><div class="line">2,markdown语法关键字与内容一般都要留个空格。</div><div class="line">  比如： # 空格 H1</div><div class="line"></div><div class="line">3,代码块内不能再使用markdown关键字，因为代码块是&lt;pre&gt;。</div><div class="line"></div><div class="line">4,本demo开启了kramdown的hard_wrap: true自动将换行符转换为&lt;br&gt;。</div><div class="line"></div><div class="line">5,本demo展示了本站点的样式(css)，如果不喜欢，可以通过此demo修改。</div><div class="line"></div><div class="line">6,本demo还包含了markdown的基本语法（红块）。</div></pre></td></tr></table></figure>
<p>:smile:本Demo的<a href="https://raw.githubusercontent.com/jokinkuang/stepbystep/master/_posts/2016-8-24-markdown_demo.md" target="_blank" rel="external">Markdown源码</a></p>
<p>目录：<br>{:use_numbered_headers =&gt; true}</p>
<ul>
<li>auto-gen TOC:<br>{:toc}</li>
</ul>
<h1 id="Kramdown-Markdown-Syntax"><a href="#Kramdown-Markdown-Syntax" class="headerlink" title="Kramdown Markdown Syntax"></a>Kramdown Markdown Syntax</h1><h1 id="H1"><a href="#H1" class="headerlink" title="H1"></a>H1</h1><h2 id="H2"><a href="#H2" class="headerlink" title="H2"></a>H2</h2><h3 id="H3"><a href="#H3" class="headerlink" title="H3"></a>H3</h3><h4 id="H4"><a href="#H4" class="headerlink" title="H4"></a>H4</h4><h6 id="H5"><a href="#H5" class="headerlink" title="H5"></a>H5</h6><blockquote>
<p># 空格 TEXT or<br>- - - -<br>TEXT<br>\=====  or -—-</p>
</blockquote>
<h2 id="TOC"><a href="#TOC" class="headerlink" title="TOC"></a>TOC</h2><p>If you create a list, and then set the toc attribute, when rendering Maruku will create an auto-generated table of contents(TOC). TOC was supported by Maruku, and Kramdown implements the Maruku so it also support TOC!</p>
<blockquote>
<p>add following to the post</p>
<p>* 空格(or 1. 空格) This is a list and would become a table of contents(TOC) and this text will be scraped that you cannot see(it doesn’t matter what you write here)!<br>{:toc}</p>
</blockquote>
<h2 id="blockquote"><a href="#blockquote" class="headerlink" title="blockquote"></a>blockquote</h2><blockquote>
<p>This is a blockquote.</p>
<p>This is the second paragraph in the blockquote.</p>
<p>> 空格 TEXT<br>> 空格 TEXT<br>> 空格 TEXT</p>
</blockquote>
<h2 id="italic"><a href="#italic" class="headerlink" title="italic"></a>italic</h2><p>Some of these words <em>are emphasized</em>.<br>Some of these words <em>are emphasized also</em>.</p>
<blockquote>
<p>*TEXT*  or _TEXT_</p>
</blockquote>
<h2 id="emphasis"><a href="#emphasis" class="headerlink" title="emphasis"></a>emphasis</h2><p>Use two asterisks for <strong>strong emphasis</strong>.<br>Or, if you prefer, <strong>use two underscores instead</strong>.</p>
<blockquote>
<p>*<em>TEXT*</em>  or __TEXT__</p>
</blockquote>
<h2 id="inline-code"><a href="#inline-code" class="headerlink" title="inline code"></a>inline code</h2><p>inline <code>code</code></p>
<blockquote>
<p>`TEXT`</p>
</blockquote>
<h2 id="unordered-list"><a href="#unordered-list" class="headerlink" title="unordered list"></a>unordered list</h2><ul>
<li>Candy.</li>
<li>Gum.</li>
<li>Booze.</li>
</ul>
<ul>
<li>Candy.</li>
<li>Gum.</li>
<li>Booze.</li>
</ul>
<ul>
<li>Candy.</li>
<li>Gum.</li>
<li>Booze.</li>
</ul>
<blockquote>
<p>* 空格 TEXT  or<br>- - - -<br>+ 空格 TEXT  or<br>- - - -<br>- 空格 TEXT</p>
</blockquote>
<h2 id="ordered-list"><a href="#ordered-list" class="headerlink" title="ordered list"></a>ordered list</h2><ol>
<li>Red</li>
<li>Green</li>
<li>Blue</li>
</ol>
<blockquote>
<ol>
<li>空格 TEXT<br>数字有没有序是没关系的</li>
</ol>
</blockquote>
<ul>
<li><p>A list item.<br>With multiple paragraphs.</p>
</li>
<li><p>Another item in the list.</p>
</li>
</ul>
<blockquote>
<p>* 空格 TEXT</p>
</blockquote>
<h2 id="link"><a href="#link" class="headerlink" title="link"></a>link</h2><p>This is an <a href="http://example.com/" target="_blank" rel="external">example link</a>.<br>This is an <a href="http://example.com/" title="With a Title" target="_blank" rel="external">example link</a>.<br>I get 10 times more traffic from <a href="http://google.com/" title="Google" target="_blank" rel="external">Google</a> than from<br><a href="http://search.yahoo.com/" title="Yahoo Search" target="_blank" rel="external">Yahoo</a> or <a href="http://search.msn.com/" title="MSN Search" target="_blank" rel="external">MSN</a>.</p>
<p>I start my morning with a cup of coffee and<br><a href="http://www.nytimes.com/" target="_blank" rel="external">The New York Times</a>.</p>
<blockquote>
<p>[example link](<a href="http://example.com/" target="_blank" rel="external">http://example.com/</a> “With a Title”)  or</p>
<hr>
<p>[example link][id]<br>空行<br>[id]: <a href="http://example.com/" target="_blank" rel="external">http://example.com/</a> “With a Title”</p>
</blockquote>
<h2 id="image"><a href="#image" class="headerlink" title="image"></a>image</h2><p><img src="/w3c/images/avator.jpg" alt="alt text" title="Title"><br><img src="/w3c/images/avator.jpg" alt="alt text" title="Title"></p>
<blockquote>
<p>The same as Link<br>But start with  <code>!</code></p>
</blockquote>
<p>How to make the image to show center？</p>
<ol>
<li>CSS           cannot</li>
<li>javascript    can</li>
<li>use img in markdown text instead</li>
</ol>
<blockquote>
<p>NOTE kmarkdown 转换图片是直接转换成 \</p><p>\<img></p>，因为css3也没有选择父的选择器（比如没有选择器可以选择含有\<img>的\<p>），所以从css角度无法实现图片居中。</p>
</blockquote>
<h1 id="GFM-Syntax"><a href="#GFM-Syntax" class="headerlink" title="GFM Syntax"></a>GFM Syntax</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"hello world!"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>```language<br>  // code here<br>```</p>
</blockquote>
<h2 id="Task-Lists"><a href="#Task-Lists" class="headerlink" title="Task Lists"></a>Task Lists</h2><ul>
<li style="list-style: none"><input type="checkbox" checked> @mentions, #refs, <a href="">links</a>, <strong>formatting</strong>, and <del>tags</del> supported</li>
<li style="list-style: none"><input type="checkbox" checked> list syntax required (any unordered or ordered list supported)</li>
<li style="list-style: none"><input type="checkbox" checked> this is a complete item</li>
<li style="list-style: none"><input type="checkbox"> this is an incomplete item</li>
</ul>
<h2 id="Tables"><a href="#Tables" class="headerlink" title="Tables"></a>Tables</h2><table>
<thead>
<tr>
<th>First Header</th>
<th>Second Header</th>
</tr>
</thead>
<tbody>
<tr>
<td>Content from cell 1</td>
<td>Content from cell 2</td>
</tr>
<tr>
<td>Content in the first column</td>
<td>Content in the second column</td>
</tr>
</tbody>
</table>
<blockquote>
<p>表格<br>cell1 | cell2  （ | 两边要空格）</p>
</blockquote>
<h2 id="SHA-references"><a href="#SHA-references" class="headerlink" title="SHA references"></a>SHA references</h2><p>Any reference to a commit’s SHA-1 hash will be automatically converted into a link to that commit on GitHub.</p>
<p>16c999e8c71134401a78d4d46435517b2271d6ac<br>mojombo@16c999e8c71134401a78d4d46435517b2271d6ac<br>mojombo/github-flavored-markdown@16c999e8c71134401a78d4d46435517b2271d6ac<br>Issue references within a repository</p>
<p>Any number that refers to an Issue or Pull Request will be automatically converted into a link.</p>
<p>#1<br>mojombo#1<br>mojombo/github-flavored-markdown#1<br>Username @mentions</p>
<p>Typing an @ symbol, followed by a username, will notify that person to come and view the comment. This is called an “@mention”, because you’re mentioning the individual. You can also @mention teams within an organization.</p>
<h2 id="Automatic-linking-for-URLs"><a href="#Automatic-linking-for-URLs" class="headerlink" title="Automatic linking for URLs"></a>Automatic linking for URLs</h2><p>Any URL (like <a href="http://www.github.com/" target="_blank" rel="external">http://www.github.com/</a>) will be automatically converted into a clickable link.    </p>
<blockquote>
<p>自动链接，必须以http开头<br>\<a href="http://example.com" target="_blank" rel="external">http://example.com</a></p>
</blockquote>
<h2 id="Strikethrough"><a href="#Strikethrough" class="headerlink" title="Strikethrough"></a>Strikethrough</h2><p>Any word wrapped with two tildes (like <del>this</del>) will appear crossed out.</p>
<blockquote>
<p>划掉线<br>~~关键字~~</p>
</blockquote>
<h2 id="Emoji"><a href="#Emoji" class="headerlink" title="Emoji"></a>Emoji</h2><p>GitHub supports emoji! :sparkles: :camel: :boom:</p>
<p>To see a list of every image we support, check out the Emoji Cheat Sheet.<br><a href="http://www.webpagefx.com/tools/emoji-cheat-sheet/" target="_blank" rel="external">http://www.webpagefx.com/tools/emoji-cheat-sheet/</a></p>
<blockquote>
<p>表情<br>空格:emoji:</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> markdown </category>
            
        </categories>
        
        
    </entry>
    
  
  
</search>
